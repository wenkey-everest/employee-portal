on:
  push:
    branches: "**"
jobs:
  Spring-boot-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Run mvn clean package
        run: |
          mvn clean install -DskipTests
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/employeeportal-backend:latest
  React-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Change to react directory
        run: |
          cd frontend
          ls -l
      - name: Install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Run npm install
        run: |
          cd frontend
          npm install
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/employeeportal-frontend:latest
  terraform:
    needs: [Spring-boot-application, React-application]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Change directory
        run: |
          cd terraform
          ls
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Terraform Init
        working-directory: /terraform
        run: terraform init

      - name: Terraform Format
        working-directory: /terraform
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: /terraform
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: /terraform
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false


